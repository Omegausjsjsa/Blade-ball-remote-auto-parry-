local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Etherbyte Hub",
    SubTitle = "made by fet's luck with love",
    TabWidth = 100,
    Size = UDim2.fromOffset(450, 320),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main" }),
    Settings = Window:AddTab({ Title = "Settings" })
}

local enableProximityToggle = Tabs.Main:AddToggle("EnableProximity", {
    Title = "Enable Auto Parry",
    Default = false
})

local players = game:GetService("Players")
local runService = game:GetService("RunService")
local ballFolder = workspace:WaitForChild("Balls")
local parryCooldown = 0.3
local lastParryTime = 0
local speedThreshold = 120

local Remote = nil
local VirtualInputManager = game:GetService("VirtualInputManager")

function ResolveParryRemote()
    for i, Items in pairs(VirtualInputManager:GetChildren()) do
        local RemoteEvent = Items:FindFirstChildOfClass('RemoteEvent')
        
        if RemoteEvent and RemoteEvent.Name:find('\n') then
            Remote = RemoteEvent
            break
        end
    end
end

local function fireParryRemote()
    if Remote then
        local localPlayer = players.LocalPlayer
        local args = {
            [1] = 0.5,
            [2] = localPlayer.Character.HumanoidRootPart.CFrame,
            [3] = {
                [localPlayer.Name] = localPlayer.Character.HumanoidRootPart.Position
            }, -- Only LocalPlayer's position
            [4] = {
                [1] = 773.1138916015625,
                [2] = 166.6013946533203
            },
            [5] = false
        }
        Remote:FireServer(unpack(args))
    else
        ResolveParryRemote()
        if Remote then
            fireParryRemote()
        end
    end
end

local function calculatePredictionTime(ball, player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = player.Character.HumanoidRootPart
        local relativePosition = ball.Position - rootPart.Position
        local velocity = ball.Velocity + rootPart.Velocity
        local distance = relativePosition.magnitude
        local speed = velocity.magnitude
        local bufferTime = 0.1
        return math.max((distance - ball.Size.magnitude / 2) / (speed + 0.1) - bufferTime, 0), speed
    end
    return math.huge, 0
end

local function checkProximityToPlayer(ball, player)
    local predictionTime, ballSpeed = calculatePredictionTime(ball, player)
    local realBallAttribute = ball:GetAttribute("realBall")
    local target = ball:GetAttribute("target")
    local currentTime = tick()

    if currentTime - lastParryTime < parryCooldown then return end

    if ballSpeed >= speedThreshold and predictionTime <= 0.4 then
        if realBallAttribute == true and target == player.Name then
            fireParryRemote()
            lastParryTime = currentTime
        end
    elseif predictionTime <= 0.4 then
        if realBallAttribute == true and target == player.Name then
            fireParryRemote()
            lastParryTime = currentTime
        end
    end
end

local function checkBallsProximity()
    local player = players.LocalPlayer
    if player then
        for _, ball in pairs(ballFolder:GetChildren()) do
            if enableProximityToggle.Value then
                checkProximityToPlayer(ball, player)
            end
        end
    end
end

local function proximityLoop()
    while enableProximityToggle.Value do
        checkBallsProximity()
        wait(0.03)
    end
end

enableProximityToggle:OnChanged(function(value)
    if value then
        spawn(proximityLoop)
    end
end)

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/auto-parry")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
SaveManager:LoadAutoloadConfig()

Fluent:Notify({
    Title = "Etherbyte Hub",
    Content = "made with love by fet's luck.",
    Duration = 8
})
